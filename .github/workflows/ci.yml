name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-lib:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install apt-fast
        run: |
          sudo add-apt-repository -y ppa:apt-fast/stable
          sudo apt-get update
          sudo apt-get install -y apt-fast

      - name: Install dependencies
        run: |
          sudo apt-fast update
          sudo apt-fast install -y libboost-graph-dev libboost-program-options-dev libboost-test-dev cmake build-essential lcov
      - name: Create Build Directory
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake with Coverage
        working-directory: ${{github.workspace}}/build
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DCMAKE_CXX_FLAGS="--coverage"

      - name: Build Library
        working-directory: ${{github.workspace}}/build
        run: cmake --build .

      - name: Run Unit Tests
        working-directory: ${{github.workspace}}/build
        run: ctest --output-on-failure

      - name: Generate Coverage Report
        working-directory: ${{github.workspace}}/build
        run: |
          lcov --directory . --capture --output-file coverage.info --ignore-errors mismatch --rc geninfo_unexecuted_blocks=1
          lcov --extract coverage.info '*/include/*' --output-file coverage.info
          lcov --remove coverage.info '/usr/*' --output-file coverage.info
          lcov --list coverage.info

  tools:
    runs-on: ubuntu-latest
    needs: test-lib
    steps:
      - uses: actions/checkout@v4

      - name: Install apt-fast
        run: |
          sudo add-apt-repository -y ppa:apt-fast/stable
          sudo apt-get update
          sudo apt-get install -y apt-fast

      - name: Install dependencies
        run: |
          sudo apt-fast update
          sudo apt-fast install -y libboost-graph-dev libboost-program-options-dev libboost-filesystem-dev libboost-system-dev cmake build-essential
      - name: Create Build Directory
        run: cmake -E make_directory ${{github.workspace}}/build_tools

      - name: Configure CMake (Tools)
        working-directory: ${{github.workspace}}/build_tools
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=OFF -DTOOLS_ALL=ON

      - name: Build Tools
        working-directory: ${{github.workspace}}/build_tools
        run: cmake --build .
